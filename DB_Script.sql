USE [StudentDB]
GO
/****** Object:  Table [dbo].[__MigrationHistory]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[__MigrationHistory](
	[MigrationId] [nvarchar](150) NOT NULL,
	[ContextKey] [nvarchar](300) NOT NULL,
	[Model] [varbinary](max) NOT NULL,
	[ProductVersion] [nvarchar](32) NOT NULL,
 CONSTRAINT [PK_dbo.__MigrationHistory] PRIMARY KEY CLUSTERED 
(
	[MigrationId] ASC,
	[ContextKey] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AspNetRoles]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AspNetRoles](
	[Id] [nvarchar](128) NOT NULL,
	[Name] [nvarchar](256) NOT NULL,
 CONSTRAINT [PK_dbo.AspNetRoles] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AspNetUserClaims]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AspNetUserClaims](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[UserId] [nvarchar](128) NOT NULL,
	[ClaimType] [nvarchar](max) NULL,
	[ClaimValue] [nvarchar](max) NULL,
 CONSTRAINT [PK_dbo.AspNetUserClaims] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AspNetUserLogins]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AspNetUserLogins](
	[LoginProvider] [nvarchar](128) NOT NULL,
	[ProviderKey] [nvarchar](128) NOT NULL,
	[UserId] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_dbo.AspNetUserLogins] PRIMARY KEY CLUSTERED 
(
	[LoginProvider] ASC,
	[ProviderKey] ASC,
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AspNetUserRoles]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AspNetUserRoles](
	[UserId] [nvarchar](128) NOT NULL,
	[RoleId] [nvarchar](128) NOT NULL,
 CONSTRAINT [PK_dbo.AspNetUserRoles] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC,
	[RoleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AspNetUsers]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AspNetUsers](
	[Id] [nvarchar](128) NOT NULL,
	[Email] [nvarchar](256) NULL,
	[EmailConfirmed] [bit] NOT NULL,
	[PasswordHash] [nvarchar](max) NULL,
	[SecurityStamp] [nvarchar](max) NULL,
	[PhoneNumber] [nvarchar](max) NULL,
	[PhoneNumberConfirmed] [bit] NOT NULL,
	[TwoFactorEnabled] [bit] NOT NULL,
	[LockoutEndDateUtc] [datetime] NULL,
	[LockoutEnabled] [bit] NOT NULL,
	[AccessFailedCount] [int] NOT NULL,
	[UserName] [nvarchar](256) NOT NULL,
 CONSTRAINT [PK_dbo.AspNetUsers] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Course]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Course](
	[CourseID] [uniqueidentifier] NOT NULL,
	[CourseName] [varchar](150) NULL,
	[CreatedOn] [datetime2](7) NULL,
	[ModifiedOn] [datetime2](7) NULL,
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED 
(
	[CourseID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Student]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Student](
	[StudentID] [uniqueidentifier] NOT NULL,
	[StudName] [varchar](150) NOT NULL,
	[StudentEmail] [varchar](150) NULL,
	[Phone] [varchar](15) NULL,
	[CreatedOn] [datetime2](7) NULL,
	[ModifiedOn] [datetime2](7) NULL,
 CONSTRAINT [PK_Student] PRIMARY KEY CLUSTERED 
(
	[StudentID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[StudentCourseMap]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[StudentCourseMap](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[StudentID] [uniqueidentifier] NULL,
	[CourseID] [uniqueidentifier] NULL,
 CONSTRAINT [PK_StudentCourseMap] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
INSERT [dbo].[__MigrationHistory] ([MigrationId], [ContextKey], [Model], [ProductVersion]) VALUES (N'202210201014353_InitialCreate', N'StudentManagement.API.Models.ApplicationDbContext', 0x1F8B0800000000000400DD5C5B6FDB36147E1FB0FF20E8691B522B97B5E802BB43EA245BB0E6823A2DF656D012ED08952855A2D204437FD91EF693F617762851375E74B115DB19060CB178F89DC3C38FE42179D87FFFFE67FCEB83EF19F7388ADD804CCC83D1BE696062078E4B961333A18B17AFCD5FDF7CFFDDF8CCF11F8C8FB9DC1193839A249E98779486C79615DB77D847F1C877ED288883051DD9816F2127B00EF7F77FB10E0E2C0C10266019C6F87D42A8EBE3F407FC9C06C4C6214D90771938D88BF9772899A5A8C615F2711C221B4FCC194D1C4CE8252268897DF86B74727331CAEA99C689E722B06986BD85692042028A28587CFC21C6331A0564390BE103F26E1F430C720BE4C598B7E4B814EFDAA8FD43D628ABAC9843D9494C03BF27E0C111F79225565FC9D766E145F0E319F89B3EB256A7BE9C9817CC89F0E97DE081034485C7532F62C213F3B25071128757988EF28AA30CF23C02B8AF41F4795445DC333AD7DB2B587538DA67FFED19D3C4A349842704273442DE9E7193CC3DD7FE033FDE069F31991C1DCC1747AF5FBE42CED1AB9FF1D1CB6A4BA1AD2057FB009F6EA220C411D8861745FB4DC3AAD7B3C48A45B54A9DCC2BC0251820A671891EDE61B2A47730740E5F9BC6B9FB809DFC0B27D707E2C278824A344AE0E755E27968EEE1A2DC6AD4C9FEDFA0F5F0E5AB41B45EA17B779976BDA01F064E04E3EA3DF6D2D2F8CE0DB3E155EBEF4F5CEC3C0A7CF6BBCEAFACF4D32C48229B3526D08ADCA2688969DDBAB15592B713A519D4F0B4CE51779FDACC5299DE4A51D6A0554642AE62D3A321B7F769F57666DC491842E7A5D4621E69225CD3B2351270F60CA57449A783AE7422D0CCFFF3EC78E623D71B607AECA0056294851BF9B868E5DB00C888486F9B6F501CC3ECE0FC8EE2BB06D3E1CF014C9F613B8980B4338AFCF0C9B5DDDC05045F25FE9C8D85CDE91AAC6B6EBF06E7C8A641744658ADB5F1DE05F6E720A167C43945147FA0760EC87EDEBA7E778041CC39B16D1CC7E74066EC4C0308C173C00B428F0E7BC3B1A96ADBE1C9D443AEAF8E4F8449F5532E5AC6286A09294ED188A962952653DF054B9774333517D59B9A49B49ACAC5FA9ACAC0BA59CA25F586A602AD76665283457F690F0D1FFEA5B0BB1FFFADB778EBE6828A1B673043E2DF30C1114C63CE0DA21447A4EC812EF3C6368285B4FB98D2275F9B524D1F91970CAD6AA5D1904E02C38F861476F747436A267CBE771D169574D814E5C200DF495EBDDF6A1F7382659B1E0EB5666E5AF966E600DD703989E3C076D351A0380EE3871975FB218633DA4F36B2D688A723D03020BACB963CF8026D3345525D9353EC618A8D133B3B2E9CA2D8468EEC466890D3C3B07C455518569E92D48DFB49D2094CC711AB84D826288691EA122A0F0B97D86E88BC562F09353B2E61ACED850EB1E41487983085AD9EE8A25C7D28C20C28F4089DD2E6A1B155615C33113551ABAECFDB42D8B2DFA5B38A8D70B22576D6F092C76F4F42CC668F6D809CCD2EE96280F6806F1B04E57B95AE0410372EBB465061C7A421280FA93642D0BAC7B640D0BA4B9E1D41B32D6AD7FE17F6ABBB46CFFA4679F3CB7AA3BBB6C0CD9A3F768C9A59EC097528D4C0914CCFD3392BC40F54B139033BF9FE2CE6A1AE4811063EC3B47E6453C6BBCA38D46A061149D4045812AD05945F0D4A40D280EA615C7E96D7681D8F227AC0E6E76E8DB07CEE17602B1C90B1AB57A41541FD45AA48CE4EBB8FA265051B249277DA2C547014841027AF7AC33B3845772E2B3BA64B2CDC271AAE348C774683835A22578D93F2C60CEEA59C9AED5E5205647D42B2B5BC24844F1A2FE58D19DC4B9CA3ED4E5204053DC282B55C545FC2071A6CF94947B1DA1465632BCBA1E21FC69626D96A7C89C2D025CB4AF215FF62CCB2CCABE98B59FF44243FC3B0EC58918F54585B68A2418496582805D560E9B91BC5F414513447EC9C67EAF89298726DD54CFFB9CAEAF2297762BE0EE4D2EC6F7EB3DA74A15F5B75E5B084A39D435B59CDB4D958C104757583A5C5210F458A33FC69E0253ED1875AFADAD94D5EB57EF64546185B82FD522825F94D0A78EB9DD0A98BE4E13178771531CDEA5DA687D0393E8F48ABAED745A97A94FCD0AA8AA23BC8DA5A17EA829B15BB4D8C20FBF75A2BC2D38C359EB65205E09F7A6254321F24B04A5977D47A724A15B35ED21D51C840A9420A453DACACE699D48CAC16AC84A7F1A85AA2BB0639B3A48A2E97764756E49854A115C52B602B6C16CBBAA32AD250AAC08AE2EED8654E8A389DEEF06AA6DDD70CB09C659BE0F5D6330DC6D3CC8DC32C8795BBFE2A50E5734F2C7E9B2F81F1EF3BC92BED4E70005E65A720EBF14A83A19F8D6AF7E5F5C9A8F1925F8F59BB04AF4DF84D49007ABC7EEC7D528E485B4251A4D05E6C0D852DE0986FC7DA1FE548FBB34CC434723702B31E638AFD111318CDBE7853CFC56C6ACF058071EE02C7344BFC300FF70F0E85D73CBBF3B2C68A63C7536C6775CF6BEA7DB6811C2E728F22FB0E457246C51AAF4F4A50E9B0FA8238F86162FE95D63A4ECF3DD85FE9E73DE322FE40DC2F0914DC460936BEC919A2C364E37778FF5118FAED593CACE8EEF28B3F3F6555F78CEB0886D3B1B12F387A95EEAF3FB7E8654D56750D6B567E84F17C475BED35831255182DAB3F5E98BB7490870BB9953FF8E8E1C7BEA6291F27AC85A878803014DE202ED43D3058054BFBB8C0819F347D5CD0AFB1EAC706AB98A67D68E092FE60E23383EED3505E738BEB9062EBB4892929F5736B9AF65A399BDB5E9BA46CEEB506BA9CB1DD036ED0ACECF542946796ED3CD8D2A948661E0C7B9BBC7FF20CE65D495A2E83F6EDE62A6F323DB9E1BAE97F9595BC0379748ABCA0EDE71E6F9A6BBAB3E01D4FE0EC9761BC6364E3CBFCF6F388374D36DD01F18E93AD57B6F08E716D5BEBE79699D67909DD7AEEAF9CC6A4B9D3519D22B7E5F66647EEB0FD9F0740822CA2CC9E64AA93C974CA4AB2681596227AA5FA2C3651B1347024BD9244B3DA7E6DE50B7E6363B94CB35A4DEE67936E3EFF37EAE632CDBA351995DBC84A56E634AA32C55BE6B1A6E4AAE794855C6B494BD27B5BCCDA7841FF9C928E07714A6DF4686E979F4F8EF1202E1972E8F4C829962F8A61EDACFC1B8FB07EC7EEB28460FFE223C1766DD52C642EC822C8176FC1A25C4438A1B9C41439B0A49E44D45D209B42313B804EDF94A7877AEC1A648E9D0B729DD030A1D064ECCFBDDA81170B029AF4A789D3759BC7D721FB150FD10430D36507F7D7E46DE27A4E61F7B9E24C4803C1A20B7EDCCBFA92B263DFE563817415908E40DC7D4550748BFDD003B0F89ACCD03D5EC536A0DF3BBC44F6637902A80369EF88BADBC7A72E5A46C88F3946591F7E02871DFFE1CD7FC36EE57AEA540000, N'6.4.4')
GO
INSERT [dbo].[AspNetUsers] ([Id], [Email], [EmailConfirmed], [PasswordHash], [SecurityStamp], [PhoneNumber], [PhoneNumberConfirmed], [TwoFactorEnabled], [LockoutEndDateUtc], [LockoutEnabled], [AccessFailedCount], [UserName]) VALUES (N'2e134951-9139-4cb0-a9c2-a6496ed62778', N'aniket.naik@gmail.com', 0, N'AI5qpW1Twpni4gRZsIVDa+u7jh7uvw9c+t0kao1SYOgq6aTpD5fmoAg68EEO+T+1JA==', N'a036c798-2b23-4d97-8427-ce59adbf3481', NULL, 0, 0, NULL, 0, 0, N'aniket.naik@gmail.com')
GO
INSERT [dbo].[Course] ([CourseID], [CourseName], [CreatedOn], [ModifiedOn]) VALUES (N'21eab5f4-1031-4f1b-9987-02b2c4b3796e', N'Electronics', NULL, NULL)
GO
INSERT [dbo].[Course] ([CourseID], [CourseName], [CreatedOn], [ModifiedOn]) VALUES (N'4d519da7-3617-4234-a8e4-1a20d9109070', N'Information Technology', NULL, NULL)
GO
INSERT [dbo].[Student] ([StudentID], [StudName], [StudentEmail], [Phone], [CreatedOn], [ModifiedOn]) VALUES (N'2a1e0d64-2391-41eb-a383-1bdf02049445', N'Aniket Naik', N'aniket.naik@gmail.com', N'98123123123', CAST(N'2022-10-20T15:28:02.9200000' AS DateTime2), CAST(N'2022-10-20T15:28:02.9200000' AS DateTime2))
GO
SET IDENTITY_INSERT [dbo].[StudentCourseMap] ON 
GO
INSERT [dbo].[StudentCourseMap] ([ID], [StudentID], [CourseID]) VALUES (1, N'2a1e0d64-2391-41eb-a383-1bdf02049445', N'21eab5f4-1031-4f1b-9987-02b2c4b3796e')
GO
SET IDENTITY_INSERT [dbo].[StudentCourseMap] OFF
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [RoleNameIndex]    Script Date: 20-10-2022 16:25:00 ******/
CREATE UNIQUE NONCLUSTERED INDEX [RoleNameIndex] ON [dbo].[AspNetRoles]
(
	[Name] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_UserId]    Script Date: 20-10-2022 16:25:00 ******/
CREATE NONCLUSTERED INDEX [IX_UserId] ON [dbo].[AspNetUserClaims]
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_UserId]    Script Date: 20-10-2022 16:25:00 ******/
CREATE NONCLUSTERED INDEX [IX_UserId] ON [dbo].[AspNetUserLogins]
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_RoleId]    Script Date: 20-10-2022 16:25:00 ******/
CREATE NONCLUSTERED INDEX [IX_RoleId] ON [dbo].[AspNetUserRoles]
(
	[RoleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [IX_UserId]    Script Date: 20-10-2022 16:25:00 ******/
CREATE NONCLUSTERED INDEX [IX_UserId] ON [dbo].[AspNetUserRoles]
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UserNameIndex]    Script Date: 20-10-2022 16:25:00 ******/
CREATE UNIQUE NONCLUSTERED INDEX [UserNameIndex] ON [dbo].[AspNetUsers]
(
	[UserName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[AspNetUserClaims]  WITH CHECK ADD  CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[AspNetUserClaims] CHECK CONSTRAINT [FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId]
GO
ALTER TABLE [dbo].[AspNetUserLogins]  WITH CHECK ADD  CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[AspNetUserLogins] CHECK CONSTRAINT [FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId]
GO
ALTER TABLE [dbo].[AspNetUserRoles]  WITH CHECK ADD  CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId] FOREIGN KEY([RoleId])
REFERENCES [dbo].[AspNetRoles] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[AspNetUserRoles] CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId]
GO
ALTER TABLE [dbo].[AspNetUserRoles]  WITH CHECK ADD  CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId] FOREIGN KEY([UserId])
REFERENCES [dbo].[AspNetUsers] ([Id])
ON DELETE CASCADE
GO
ALTER TABLE [dbo].[AspNetUserRoles] CHECK CONSTRAINT [FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId]
GO
ALTER TABLE [dbo].[StudentCourseMap]  WITH CHECK ADD  CONSTRAINT [FK_StudentCourseMap_Course] FOREIGN KEY([CourseID])
REFERENCES [dbo].[Course] ([CourseID])
GO
ALTER TABLE [dbo].[StudentCourseMap] CHECK CONSTRAINT [FK_StudentCourseMap_Course]
GO
ALTER TABLE [dbo].[StudentCourseMap]  WITH CHECK ADD  CONSTRAINT [FK_StudentCourseMap_Student] FOREIGN KEY([StudentID])
REFERENCES [dbo].[Student] ([StudentID])
GO
ALTER TABLE [dbo].[StudentCourseMap] CHECK CONSTRAINT [FK_StudentCourseMap_Student]
GO
/****** Object:  StoredProcedure [dbo].[AddStudent]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AddStudent]
	@StudentID UNIQUEIDENTIFIER,
	@StudentName VARCHAR(150),
	@EmailID VARCHAR(150),
	@PhoneNo VARCHAR(15)

AS
BEGIN
	
	SET NOCOUNT ON;

	DECLARE @ErrorCode INT=1;
	DECLARE @ErrorMsg VARCHAR(50);

	IF(exists(SELECT 1 FROM Student WHERE StudentEmail=@EmailID))
	BEGIN
	SET @ErrorCode=2;
	SET @ErrorMsg='Student already exists';
	SELECT @ErrorCode AS ErrStatus,'Test' as ErrMsg
	RETURN;
	END
	ELSE
	BEGIN	
	INSERT INTO Student
			(StudentID, StudName, StudentEmail, Phone, CreatedOn, ModifiedOn)
	VALUES (@StudentID,@StudentName,@EmailID,@PhoneNo, GETDATE(), GETDATE())

	END

	SELECT @ErrorCode AS ErrStatus,'Test' as ErrMsg
END
GO
/****** Object:  StoredProcedure [dbo].[AssignCourseToStudent]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[AssignCourseToStudent](

@StudentID UNIQUEIDENTIFIER,
@CourseID UNIQUEIDENTIFIER
)	
AS
BEGIN
	
	SET NOCOUNT ON;

	--IF(not exists(SELECT 1 FROM Student WHERE StudentID=@StudentID))
	--BEGIN	
	--RETURN;
	--END

	INSERT INTO StudentCourseMap
			(StudentID, CourseID)
	VALUES (@StudentID,@CourseID)
END
GO
/****** Object:  StoredProcedure [dbo].[GetStudentList]    Script Date: 20-10-2022 16:25:00 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[GetStudentList](
@PageNo int=0,
@PageLength int=0
) 
	
AS
BEGIN
	
	SET NOCOUNT ON;
	SELECT scm.StudentID, StudName, StudentEmail, Phone,Course.CourseName,Course.CourseID
	FROM     Student JOIN StudentCourseMap scm ON Student.StudentID=scm.StudentID
	JOIN Course ON Course.CourseID=scm.CourseID;
END
GO
